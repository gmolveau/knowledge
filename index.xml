<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Gregouz Knowledge</title>
    <link>https://gmolveau.github.io/knowledge/</link>
    <description>Recent content in Introduction on Gregouz Knowledge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://gmolveau.github.io/knowledge/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/ai/ai/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/ai/ai/</guid>
      <description> AI # Cédric VILLANI - rapport et recommendations - Donner un sens à l&amp;rsquo;intelligence artificielle notes de la synthèse du rapport
plus grand accès et meilleure circulation des données réforme du droit d&amp;rsquo;auteur pour permettre le text-mining et data-mining politique de donnée souveraine, position ferme d&amp;rsquo;export des données hors Europe droit à la portabilité manque de visibilité des entreprises et académies excès de prudence des grandes entreprises françaises à l&amp;rsquo;égard des startups d&amp;rsquo;IA création d&amp;rsquo;un guichet unique d&amp;rsquo;information des acheteurs d&amp;rsquo;IA quatre secteurs prioritaires : santé, environnement, transports-mobilités, défense-sécurité mise en place de plateformes sectorielles de mutualisation pour accès l&amp;rsquo;IA et ses acteurs mise en place bacs à sable d&amp;rsquo;innovation via réduction contraintes reglementaires l&amp;rsquo;Etat français doit montrer l&amp;rsquo;exemple intégrer l&amp;rsquo;IA à la conduite des politiques publiques installer un coordinateurs interministériel chargé de répartir l&amp;rsquo;intégration de l&amp;rsquo;IA dynamiser l&amp;rsquo;achat public innovant compliqué de transformer les avancées scientifiques en applications industrielles et économiques constat de fuite des cerveaux vers GAFAM et géants américains création Instituts Interdisciplinaires d&amp;rsquo;Intelligence Artificielle (3IA) via établissements publics allègement drastique des formalités administratives des recrutements scientifiques + compléments de salaires conséquents + postes à temps plein mise en place supercalculateurs libre-service pour chercheurs et partenaires doublement des salaires dans la recherche publique renforcer attractivité de la France définir une complémentarité IA-homme qui ne soit pas aliénante développer compétences créatives dans les formations céer un lab public de la transformation du travail aider ceux dont les métiers risquent d&amp;rsquo;être automatisés nouveaux modes de financement de la formation professionnelle instaurer dialogue social autour du partage de valeur ajoutée multiplier par 3 le nombre de personnes formées en intelligence artificielle (à partir du bac+2) IA doit s&amp;rsquo;intégrer aux initiatives émergentes dans le cadre de l&amp;rsquo;Accord Climat recherche portant sur optimisation des ressources énergétiques (météo, sciences du vivant) innovation de rupture dans le domaine du semi-conducteur (technologies neuromorphiques) cloud européen plus écologique (via un label) pousser des architectures open-hardware et logiciels open-software (ca existe pas open-software j&amp;rsquo;imagine cest open-source ou libre mais bon) mise à disposition des données publiques (open-data) production de modèles IA plus explicables, UI plus intelligibles, mécanismes cognitifs plus compréhensibles ethic by design, sensibilisation discrimination impact assessment (à la sauce privacy impact assessment du RGPD) créer un comité d&amp;rsquo;éthique de l&amp;rsquo;IA atteindre seuil 40% de femmes étudiantes dans les fillières numériques en 2020 puissance publique doit soutenir le développement d&amp;rsquo;initiatives basées sur l&amp;rsquo;IA dans les champs sociaux </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/business/business/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/business/business/</guid>
      <description> Business # Resources # https://web.archive.org/web/20210918232402/https://a16z.com/2020/09/07/on-productivity-scheduling-reading-habits-marc-andreessen/ https://davnicwil.com/do-things-that-dont-require-scale/ https://sandro.volpee.de/the-mom-test-summary-validate-ideas </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/business/freelance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/business/freelance/</guid>
      <description>Freelance # Resources # https://youtu.be/jVkLVRt6c1U - Mike Monteiro - Fuck You, Pay Me</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/connaissance/connaissance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/connaissance/connaissance/</guid>
      <description>esprit critique # &amp;mdash; étude randomisée en double aveugle impossible de s&amp;rsquo;affranchir de la diversité humaine, il faut la prendre en compte dans l&amp;rsquo;étude ni la personne prenant le traitement, ni la personne l&amp;rsquo;administrant ne savent s&amp;rsquo;il s&amp;rsquo;agit d&amp;rsquo;un placebo
on ne teste qu’un seul paramètre à la fois
en l’absence de faits, ne pas entrer dans la théorisation
les paréidolies : associer un stimulus visuel informe et ambigu à un élément clair et identifiable, souvent une forme humaine ou animale</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/courses/courses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/courses/courses/</guid>
      <description>https://ocw.mit.edu/resources/res-tll-005-how-to-speak-january-iap-2018/how-to-speak/index.htm</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/developpement_personnel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/developpement_personnel/</guid>
      <description>toltèques # que votre parole soit impeccable est un bel objectif cest indaignable. mais si vous restez trop dans le confort vous finirez faible avec les forts. ne craignez pas que votre parole puisse choquer pour peu que vous serviez la vérité.
quant à ne rien prendre personnellement, c&amp;rsquo;est là un signe de grandeur d&amp;rsquo;âme assurément. et si cetait l&amp;rsquo;indice plutot quon peut vous marcher dessus sans risquer gros. relever la tete et bomber votre égo, si tous les braves gens se laissent faire, c&amp;rsquo;est le mal qui prospère.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/games/wow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/games/wow/</guid>
      <description>si on oublie pas, TBC l&amp;rsquo;arène sort, wotlk les gens deviennent famous mais sont OTP sur leur perso, jouent qq fois plusieurs compos mais ça reste assez restreint, cata les gens s&amp;rsquo;adaptent à la méta (rsham trololol, mais bcp de rmp qd même), donc on voit des gens changer de perso, changer de compo, panda =&amp;gt; monkkkk everywhere donc les gens sont vraiment pu OTP en tant que tel, ça devient + large, même si les choix dépendent bcp + de la meta actuelle qu&amp;rsquo;autre chose</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/agile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/agile/</guid>
      <description>https://ronjeffries.com/articles/018-01ff/abandon-1/
https://www.amazingcto.com/why-we-always-endup-with-waterfall-even-scrum/
https://news.ycombinator.com/item?id=29458066</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/analytics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/analytics/</guid>
      <description> cloud # https://plausible.io/#pricing https://www.goatcounter.com/ https://usefathom.com/ self-hosted # matomo https://umami.is/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/api/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/api/api/</guid>
      <description> API # Resources # https://technically.substack.com/p/whats-an-api https://www.notboring.co/p/apis-all-the-way-down?s=r https://technically.dev/posts/apis-for-the-rest-of-us </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/architecture/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/architecture/architecture/</guid>
      <description> Architecture # Resources # http://www.cs.cmu.edu/afs/cs/project/vit/ftp/pdf/intro_softarch.pdf https://wa.aws.amazon.com/index.fr.html https://betterprogramming.pub/modern-day-architecture-design-patterns-for-software-professionals-9056ee1ed977 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/architecture/event-driven/event-driven/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/architecture/event-driven/event-driven/</guid>
      <description> Event Driven Architecture # Resources # https://aws.amazon.com/fr/event-driven-architecture/ https://cleandojo.com/2019/06/event-storming-modelisez-votre-domaine-metier-en-equipe/ https://blog.ippon.fr/2020/02/19/un-event-storming-avec-alberto-brandolini/ https://en.wikipedia.org/wiki/Event_storming https://pablopernot.fr/2019/07/event-storming-description/ https://blog.octo.com/event-driven-est-ce-que-je-suis-pret-compte-rendu-du-talk-de-wassel-alazhar-a-la-duck-conf-2019/ https://medium.com/codeshake/cqrs-events-sourcing-avec-gcp-1-3-introduction-e5a62bbdae28 https://martinfowler.com/eaaDev/EventSourcing.html https://microservices.io/patterns/data/event-sourcing.html </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/bdd/bdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/bdd/bdd/</guid>
      <description> BDD / Behavior-Driven Development # Resources # https://beyondxscratch.com/2019/05/21/behavior-driven-development-from-scratch/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/cache/cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/cache/cache/</guid>
      <description> Cache / Caching # Resources # https://medium.com/pinterest-engineering/scaling-cache-infrastructure-at-pinterest-422d6d294ece </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/ci/ci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/ci/ci/</guid>
      <description> CI / Continuous Integration # Resources # https://earthly.dev/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/cloud/gitops/gitops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/cloud/gitops/gitops/</guid>
      <description> Gitops # Resources # https://www.infoq.com/fr/articles/gitops-accelerer-livraison-cloud/ https://medium.com/skale-5/gitops-devops-5e42a57bc949 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/code/clean_code/clean_code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/code/clean_code/clean_code/</guid>
      <description> Clean Code # Resources # https://medium.com/thedevproject/summary-of-clean-code-by-robert-c-martin-7117b3947cb8 https://gist.github.com/wojteklu/73c6914cc446146b8b533c0988cf8d29 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/code/refactoring/refactoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/code/refactoring/refactoring/</guid>
      <description> Code Refactoring # Resources # https://refactoring.guru/smells/primitive-obsession </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/code/solid/solid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/code/solid/solid/</guid>
      <description> SOLID principles # Resources # https://www.baeldung.com/solid-principles https://kislayverma.com/programming/evolving-software-solid-principles-as-a-continuum/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/containers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/containers/</guid>
      <description>Docker does not has an OS in its containers. In simple terms, a docker container image just has a kind of filesystem snapshot of the linux-image the container image is dependent on.
The container-image includes some basic programs like bash-shell, vim-editor etc to facilitate developer to work easily with the docker image. Also, docker images can include pre-installed dependencies like nodeJS, redis-server etc as we can find on docker hub.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/courses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/courses/</guid>
      <description>https://refactoring.guru/refactoring/course https://refactoring.guru/design-patterns/book
https://software.af.mil/training/</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/cpp/cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/cpp/cpp/</guid>
      <description>command cli # https://github.com/jarro2783/cxxopts
https://www.argtable.org/
https://www.boost.org/doc/libs/1_61_0/doc/html/program_options.html
https://github.com/CLIUtils/CLI11
gitlab-ci # https://github.com/olindata/sample-gitlabci-cpp-project
https://mklimenko.github.io/english/2020/02/02/gitlab-ci-cpp/</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/css/</guid>
      <description>CSS # Flexbox # Twitter tweet layout with css flexbox https://codepen.io/moshfequr9/pen/wXQbPR Learn CSS Flexbox by building a photo card component https://freshman.tech/flexbox/ Flexbox Nav Bar with Fixed, Variable, and Take-Up-The-Rest Elements https://css-tricks.com/flexbox-nav-bar-fixed-variable-take-rest-elements/ Create Classic Card Layout with Flexbox CSS https://dev.to/vguleaev/create-classic-card-layout-with-flexbox-css-32fc learn flexbox with froggy https://flexboxfroggy.com/#fr
https://developer.mozilla.org/fr/docs/Learn/CSS/CSS_layout/Flexbox_skills https://developer.mozilla.org/fr/docs/Learn/CSS/CSS_layout/Flexbox
https://la-cascade.io/flexbox-guide-complet/ https://la-cascade.io/css-flexbox-et-lalignement-guide-complet/
https://www.freecodecamp.org/news/learn-flexbox-common-use-cases/
http://lab-sticc.univ-brest.fr/~leparc/Etud/Licence/IntroInfo/WebPascal/TP9_Web.pdf https://ptitim.github.io/Flex/indexexo.html https://mescours.ovh/ex10.html https://eneax.github.io/learn-flexbox/
Grid # Building the old Twitter layout using CSS Grid https://medium.com/quick-code/building-the-old-twitter-layout-using-css-grid-9aeee2260ba4 twitter thread - quick guide to CSS Grid layout https://twitter.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/css/css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/css/css/</guid>
      <description> CSS # Resources # https://engineering.kablamo.com.au/posts/2023/media-queries-and-responsive-design/ https://www.mikeaparicio.com/posts/2023-05-22-why-were-bad-at-css/ https://ethanmarcotte.com/wrote/responsive-design-at-11-container-queries/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/cto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/cto/</guid>
      <description>lead - CTO # https://news.ycombinator.com/item?id=29571126 # &amp;ldquo;This is great insight. I&amp;rsquo;d like to offer a slight alternative for &amp;ldquo;You just kind of have to minimize the wrongness&amp;rdquo;.
I think a CTO should have several mental models for making decisions. Minimizing wrongness is just one.
Some examples:
Is this decision reversible?
Does this choice allow my team to grow technically?
Will this matter a year from now?
Is this something I can buy instead of build?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/database/database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/database/database/</guid>
      <description> Database # Resources # https://architecturenotes.co/things-you-should-know-about-databases/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/ddd/ddd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/ddd/ddd/</guid>
      <description> Domain Driven Design (DDD) # Resources # https://verraes.net/2021/09/what-is-domain-driven-design-ddd/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/django/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/django/</guid>
      <description>Django # https://developer.mozilla.org/fr/docs/Learn/Server-side/Django
https://docs.djangoproject.com/en/4.0/intro/tutorial01/
https://github.com/nickjj/docker-django-example
https://news.ycombinator.com/item?id=29472349
Django has allowed me to enjoy some side entrepreneurship. I have released three products as a solo part time dev that I would never have been able to do in a reasonable time using Java/Spring (my strongest stack). My first project went nowhere, but the second generated 1k+ a month and sold for 50k, and the third one is following a similar trajectory. My advice - keep it simple - function based views - centralize access to the ORM (avoid fat models, use a service layer) - responsive bootstrap template with crispy forms - minimal js - 12 factor type setup - django-environ or similar - be aware of n+1 select problem (I use django debug toolbar but looking into django-zen-queries) - plop it on heroku, AWS lightsail, Digital Ocean or if containerizing use AWS Fargate - avoid celery unless you are at a scale you need it - use django-cron, django-db-queue or similar - use a managed database and managed email service I have had zero scalability problems.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/docker/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/docker/docker/</guid>
      <description> Docker # Resources # https://jonathan.bergknoff.com/journal/run-more-stuff-in-docker/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/engineering/engineering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/engineering/engineering/</guid>
      <description> Software Engineering # Resources # https://martinrue.com/my-engineering-axioms/ Out of the tar pit (2006) https://curtclifton.net/papers/MoseleyMarks06a.pdf https://mcfunley.com/choose-boring-technology https://www.brandons.me/blog/write-code-not-too-much-mostly-functions https://jvns.ca/blog/learn-how-things-work/ https://cprimozic.net/blog/programming-speed-strategies/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/flask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/flask/</guid>
      <description> flask # https://wakatime.com/blog/32-flask-part-1-sqlalchemy-models-to-json
celery # https://blog.miguelgrinberg.com/post/celery-and-the-flask-application-factory-pattern https://testdriven.io/blog/flask-and-celery/ https://github.com/stefanondisponibile/flask_celery/ https://medium.com/@frassetto.stefano/flask-celery-howto-d106958a15fe https://stackabuse.com/asynchronous-tasks-using-flask-redis-and-celery/ https://flask.palletsprojects.com/en/2.0.x/patterns/celery/ json # https://arunmozhi.in/2019/07/26/simplifying-json-parsing-in-flask-routes-using-decorators/ https://arunmozhi.in/2019/08/16/parsing-validating-json-in-flask-requests/
https://pypi.org/project/flask-expects-json/ https://medium.com/analytics-vidhya/server-validation-in-flask-api-with-json-schema-963aa05e305f
cookiecutter # https://github.com/karec/cookiecutter-flask-restful https://github.com/tiangolo/full-stack-fastapi-postgresql https://github.com/cookiecutter-flask/cookiecutter-flask </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/frontend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/frontend/</guid>
      <description> Front-End (html, css, js) # https://alpinejs.dev/
https://htmx.org/
&amp;lt;button hx-post=&amp;#34;/clicked&amp;#34; hx-swap=&amp;#34;outerHTML&amp;#34;&amp;gt; Click Me &amp;lt;/button&amp;gt; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/git/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/git/git/</guid>
      <description>Git # Git flow
https://www.endoflineblog.com/oneflow-a-git-branching-model-and-workflow https://www.endoflineblog.com/gitflow-considered-harmful
Git worklows
http://reinh.com/blog/2009/03/02/a-git-workflow-for-agile-teams.html
git checkout master git pull origin master git checkout -b 3275-add-commenting # frequently git fetch origin master git rebase origin/master # before push git rebase -i origin/master # squash except the first (top) commit git checkout master git merge 3275-add-commenting git push origin master https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html
Commit # https://gist.github.com/lisawolderiksen/a7b99d94c92c6671181611be1641c733 https://cbea.ms/git-commit/#seven-rules http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html https://www.git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project#_commit_guidelines https://github.com/torvalds/subsurface-for-dirk/blob/master/README.md#contributing http://who-t.blogspot.co.at/2009/12/on-commit-messages.html https://github.com/erlang/otp/wiki/writing-good-commit-messages https://github.com/spring-projects/spring-framework/blob/30bce7/CONTRIBUTING.md#format-commit-messages
Resources # https://codewords.recurse.com/issues/two/git-from-the-inside-out https://jwiegley.github.io/git-from-the-bottom-up/ https://git-scm.com/docs/git-switch https://news.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/go/go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/go/go/</guid>
      <description>Courses # https://testwithgo.com/#buy
https://www.calhoun.io/moving-towards-domain-driven-design-in-go/?__s=gqaghnpg3ivlqw57uu4x
https://www.calhoun.io/courses
https://lets-go.alexedwards.net/#packages
https://ednsquare.com/story/learn-go-beginners-guide-to-learn-golang-from-scratch-------gTmFx6 (free)
https://quii.gitbook.io/learn-go-with-tests/
https://rytisbiel.com/2021/03/06/darker-corners-of-go/
Clean Architecture / Hexagonal Architecture # https://blog.octo.com/architecture-hexagonale-trois-principes-et-un-exemple-dimplementation/
Building Hexagonal Microservices with Go
le code : https://github.com/tensor-programming/hex-microservice/tree/part-1 bien checker la branche sur github, ya part 1, 2 et 3 Part 1 https://youtu.be/rQnTtQZGpg8 Part 2 https://youtu.be/xUYDkiPdfWs Part 3 https://youtu.be/QyBXz9SpPqE https://medium.com/@eminetto/clean-architecture-using-golang-b63587aa5e3f
https://github.com/eminetto/clean-architecture-go https://eltonminetto.net/en/post/2020-07-06-clean-architecture-2years-later/
https://github.com/eminetto/clean-architecture-go-v2 https://github.com/err0r500/go-realworld-clean
https://threedots.tech/post/introducing-clean-architecture/
https://github.com/ThreeDotsLabs/wild-workouts-go-ddd-example
https://github.com/AkbaraliShaikh/denti
Go Design Patterns # Part 1 - The Decorator Pattern - https://youtu.be/F365lY5ECGY?list=WL Part 2 - Generator Pattern and Observer Pattern - https://youtu.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/grpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/grpc/</guid>
      <description>GRPC # https://kreya.app/blog/grpc-best-practices/</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/hexagonal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/hexagonal/</guid>
      <description>Clean architecture by Robert &amp;ldquo;Uncle Bob&amp;rdquo; Martin https://www.oreilly.com/library/view/clean-architecture-a/9780134494272/ (2017)
example Architecture the Lost Years http://www.youtube.com/watch?v=WpkDN78P884 (2011) Onion Architecture by Jeffrey Palermo http://jeffreypalermo.com/blog/the-onion-architecture-part-1/ (2008)
Hexagonal Architecture by Alistair Cockburn http://alistair.cockburn.us/Hexagonal+architecture (2005)
Domain-Driven Design by Eric Evans http://dddcommunity.org/book/evans_2003/ (2003)
Martin Fowler https://martinfowler.com/tags/domain%20driven%20design.html (2002)
reprend l&amp;rsquo;archi hexagonale, tu peux partir du core, ce que tu veux que ta feature fasse tu définis tes ports, ce qu&amp;rsquo;elle va exposer (les méthodes qu&amp;rsquo;elle va devoir implémenter), et ce dont elle va avoir besoin (les méthodes dont ton business va dépendre, pour récupérer des données etc)</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/homeserver/homeserver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/homeserver/homeserver/</guid>
      <description> Homeserver # Resources # https://github.com/ahembree/ansible-hms-docker/blob/master/roles/hmsdocker/tasks/authentik.yml </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/it/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/it/</guid>
      <description>donc oui hexa tu veux séparer Appli Domain Infra
de base, tu dois avoir des modules fonctionnels
et pour ces modules fonctionnels, oui, ddd
et dans ton code, hexa
donc t&amp;rsquo;as un module authent, un module purchase, un module products, un module etc etc etc qui font des séparations fonctionnelles claires
et dans tes modules
t&amp;rsquo;as app/domain/infra
app -&amp;gt; your typical WS endpoint, ton API Rest que t&amp;rsquo;expose
domain -&amp;gt; ton business, la couche métier, appelé par l&amp;rsquo;app, qui peut appeler le repo et fait des trucs avec ce qu&amp;rsquo;il récupère</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/jq/jq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/jq/jq/</guid>
      <description> JQ # Resources # https://earthly.dev/blog/jq-select/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/k8s/k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/k8s/k8s/</guid>
      <description> kubernetes / k8s # minikube : https://minikube.sigs.k8s.io/docs/ microk8s : https://microk8s.io/ k3s : https://k3s.io/ resources # https://buttondown.email/nelhage/archive/two-reasons-kubernetes-is-so-complex/#fn:frontload https://nikhiljha.com/posts/kubernetes-intro/ This design makes you deal up-front with practicalities you might otherwise have ignored for a long time.
https://www.suse.com/c/rancher_blog/best-practices-for-monitoring-and-alerting-on-kubernetes/ https://www.suse.com/c/rancher_blog/building-an-automated-deployment-process-with-kubernetes-ci-cd/ https://martinheinz.dev/blog/49 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/lead/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/lead/</guid>
      <description>https://news.ycombinator.com/item?id=31438741 Do you want to be an engineering leader? This is what you are, regardless of your official title at your company. Engineering leaders are judged by how much better they make everyone else. You may hear the term force multiplier used. Say you are really a 10x engineer, how much more effective are you if you could improve the efficiency of 350 developers by 10%? Mentor, teach, help establish culture, make systemic changes to help your peers become more effective.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/learn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/learn/</guid>
      <description> Learn IT # Links # https://learnxinyminutes.com/ https://refactoring.guru/smells/primitive-obsession https://netflixtechblog.com/ https://www.pluralsight.com/ https://www.hackerrank.com/domains/data-structures https://jvns.ca/ https://danluu.com/ https://engineeringblogs.xyz/ Newsletters # https://blog.bytebytego.com/ Videos # International # https://www.youtube.com/watch?v=8mAITcNt710 https://www.youtube.com/@Computerphile https://www.youtube.com/@GOTO-/videos https://www.youtube.com/@ByteByteGo/videos https://www.youtube.com/@ArjanCodes https://www.youtube.com/@WebDevCody https://www.youtube.com/@aarondfrancis https://www.youtube.com/@ContinuousDelivery French # https://www.youtube.com/@DevoxxFRvideos/videos https://www.youtube.com/@BreizhCamp/videos </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/logging/logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/logging/logging/</guid>
      <description>Logging # Descriptive / Contextual / Reactive - Actionable
If I read this log, what should I understand ?
Log events, should be like a story : start of the operation, relevant things and the conclusion (good or bad)
CRITICAL level = wake up someone at 3am DEBUG level in prod
use JSON format, use the same json structure (fields) across services
use different handlers
the verbose flag can simply change the level of the handler to DEBUG</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/macos/macos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/macos/macos/</guid>
      <description> MacOS # Resources # https://github.com/stefanjudis/dotfiles/blob/b0ec1018e05da55bc9436e78f732a4864ea96b3c/scripts/mac.sh </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/makefile/makefile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/makefile/makefile/</guid>
      <description> Makefile # Resources # https://www.gnu.org/software/make/manual/html_node/Standard-Targets.html https://gist.github.com/gmolveau/a6331c21e8973f4a1ea51185096e37b8 https://tech.davis-hansson.com/p/make/ https://betterprogramming.pub/my-ultimate-makefile-for-golang-projects-fcc8ca20c9bb </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/markdown/markdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/markdown/markdown/</guid>
      <description> Markdown # Citation with author &amp;gt; Test-driven development (TDD) is a software development process that relies on the repetition of a very short development cycle: requirements are turned into very specific test cases, then the software is improved to pass the new tests, only. &amp;gt; &amp;gt; --- [Test-driven development. (2016, November 20). In Wikipedia, The Free Encyclopedia. Retrieved 23:45, November 20, 2016](https://en.wikipedia.org/w/index.php?title=Test-driven_development&amp;amp;oldid=750634597) Details/Summary collapse/expandable block &amp;lt;details open&amp;gt; &amp;lt;summary&amp;gt;Shopping list&amp;lt;/summary&amp;gt; * Vegetables * Fruits * Fish &amp;lt;/details&amp;gt; </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/microservices/microservices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/microservices/microservices/</guid>
      <description>Microservices # https://blog.kronis.dev/articles/modulith-because-we-need-to-scale-but-we-also-cannot-afford-micro-services
https://arnoldgalovics.com/microservices-in-production/
https://developer.okta.com/blog/2020/03/23/microservice-security-patterns
https://www.bennadel.com/blog/3944-why-ive-been-merging-microservices-back-into-the-monolith-at-invision.htm
https://hackr.io/blog/microservices-interview-questions
https://www.infoq.com/articles/microservices-from-trenches-lessons-challenges/
https://www.infoq.com/articles/microservice-monitoring-right-way/?itm_content=link_text
https://www.infoq.com/articles/lessons-learned-monolith-microservices/?itm_content=link_text
https://www.infoq.com/articles/microservices-grpc-ballerina-go/?itm_content=link_text
https://blog.christianposta.com/microservices/do-i-need-an-api-gateway-if-i-have-a-service-mesh/
https://danielbmarkham.com/honest-microservices/
https://blog.christianposta.com/microservices/3-easy-things-to-do-to-make-your-microservices-more-resilient/
https://www.jrebel.com/blog/microservices-resilience-patterns
https://learn.microsoft.com/en-us/dotnet/architecture/microservices/architect-microservice-container-applications/resilient-high-availability-microservices
https://developers.redhat.com/blog/2017/05/16/it-takes-more-than-a-circuit-breaker-to-create-a-resilient-application
https://stackoverflow.com/a/60991514
https://learn.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker
https://learn.microsoft.com/en-us/azure/architecture/patterns/bulkhead
https://medium.com/capital-one-tech/resiliency-patterns-at-the-edge-capital-one-a5b4d41d477e
https://arodrigues.developpez.com/tutoriels/architecture/design-pattern-circuit-breaker/
https://fr.wikipedia.org/wiki/Illusions_de_l%27informatique_distribu%C3%A9e</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/nocode/nocode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/nocode/nocode/</guid>
      <description> NoCode # Resources # https://blog.octo.com/les-dix-commandements-dune-plateforme-no-code-mature/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/product_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/product_manager/</guid>
      <description>https://news.ycombinator.com/item?id=22827275
bah grosso merdo faut faire comprendre aux mecs en face qu&amp;rsquo;on bosse tous ensemble (donc pas les voir comme &amp;ldquo;les mecs en face&amp;rdquo; justement)
et à partir du moment ou ils sont &amp;ldquo;intégrés&amp;rdquo; au fonctionnement
bah ils comprennent que changer d&amp;rsquo;avis / les prios etc ça a un impact sur les délais ..
ils ont tout à fait le droit de changer
juste ça a un impact et s&amp;rsquo;ils sont intégrés et qu&amp;rsquo;les échanges sont OK ils le comprennent</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/python/design_patterns/design_patterns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/python/design_patterns/design_patterns/</guid>
      <description> Python Design Patterns # Clean Architecture # Resources # https://breadcrumbscollector.tech/python-the-clean-architecture-in-2021/ Resources # https://github.com/python-injector/flask_injector </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/python/exceptions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/python/exceptions/</guid>
      <description> Python Exceptions # Look Before You Leap (LBYL) and Easier to Ask Forgiveness than Permission (EAFP)
Try Except Else # the code in the else block is executed only if the code in the try block didn&amp;rsquo;t throw an exception.
Another use of else is when code in the try block requires some cleanup (and doesn&amp;rsquo;t have a usable context manager)
Resources # https://jeffknupp.com/blog/2013/02/06/write-cleaner-python-use-exceptions/ https://web.archive.org/web/20220211170740/https://julien.danjou.info/python-exceptions-guide </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/python/flask/flask_hexagonal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/python/flask/flask_hexagonal/</guid>
      <description>Flask Hexagonal # https://python-dependency-injector.ets-labs.org/examples/flask.html https://alexgrover.me/writing/python-hexagonal-architecture https://douwevandermeij.medium.com/hexagonal-architecture-in-python-7468c2606b63 https://github.com/serfer2/flask-hexagonal-architecture-api</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/python/learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/python/learning/</guid>
      <description>from pluralsight
modules are singleton
Closures and decorators # closure maintains references to objects from earlier scopes
def raise_to(exp): def raise_to_exp(x): return pow(x, exp) return raise_to_exp square = raise_to(2) # square is now a function assert square(2) == 4 cube = raise_to(3) assert cube(3) == 9 lambdas are one-line function without a name
length = lambda name: len(name) assert length(&amp;#34;oui&amp;#34;) == 3 def function(a, b): print(&amp;#34;A function&amp;#34;) def local_function(x, y): print(&amp;#34;A local function&amp;#34;) return x*y + a*b return local_function lambdas // TODO function factories decorators</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/python/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/python/python/</guid>
      <description>Clean Architecture
https://breadcrumbscollector.tech/mypy-how-to-use-it-in-my-project/ https://breadcrumbscollector.tech/mypy-how-to-use-it-in-my-project-part-2-automatically-annotate-code/ https://breadcrumbscollector.tech/mypy-how-to-use-it-in-my-project-part-3-kick-ass-tools-that-leverage-type-annotations/ https://github.com/ajgrover/hexagonal-architecture-python https://breadcrumbscollector.tech/the-clean-architecture-in-python-how-to-write-testable-and-flexible-code/ https://www.thedigitalcatonline.com/blog/2016/11/14/clean-architectures-in-python-a-step-by-step-example/ https://www.thedigitalcatonline.com/blog/2016/03/06/python-mocks-a-gentle-introduction-part-1/ https://www.thedigitalcatonline.com/blog/2016/09/27/python-mocks-a-gentle-introduction-part-2/ https://www.kevindangoor.com/posts/hexagonalarchitecture/
TDD
https://www.thedigitalcatonline.com/blog/2015/05/13/python-oop-tdd-example-part1/ https://www.thedigitalcatonline.com/blog/2015/09/10/python-oop-tdd-example-part2/
https://realpython.com/pytest-python-testing/
Misc
https://rachelbythebay.com/w/2020/03/07/costly/
DDD
https://slides.com/mafinarkhan/ddddd#/ https://dddinpython.com/index.php/2021/11/22/value-objects-in-python/ https://blog.szymonmiks.pl/p/value-objects-with-python/
Black, flake8, isort and mypy (with several type strengthening flags) have together ensured that Python editing and code reviews are an absolute breeze.
Multithreading / GIL / Multiprocessing
https://itecnote.com/tecnote/python-green-threads-and-thread-in-python/ https://stackoverflow.com/questions/12758952/green-threads-and-thread-in-python
Reading: source code
https://tourdesource.substack.com/p/how-pydantic-works
a trier # https://python.plainenglish.io/a-python-project-checklist-91242b4a2ca3 https://github.com/gmolveau/python-project-template https://medium.com/analytics-vidhya/structuring-python-code-best-practices-from-over-10-blogs-2e33cbb83c49 https://python-patterns.guide/</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/python/tests/tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/python/tests/tests/</guid>
      <description> Python Tests # Resources # https://testdriven.io/blog/flask-pytest/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/quotes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/quotes/</guid>
      <description>Quotes # “Remember, when advertising is involved you the user are the product. Your data isn&amp;rsquo;t even in the picture. We are simply not interested in any of it. When people ask us why we charge for WhatsApp, we say ‘Have you considered the alternative?’“
&amp;ndash; WhatsApp blog post “Why we don&amp;rsquo;t sell ads“, June 2012</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/rgpd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/rgpd/</guid>
      <description>MOOC de la CNIL sur le RGPD : https://atelier-rgpd.cnil.fr/
RGPD en pratique : https://www.cnil.fr/fr/rgpd-en-pratique-proteger-les-donnees
Cloud Act, l&amp;rsquo;offensive américaine pour contrer le RGPD : https://portail-ie.fr/analysis/1902/cloud-act-loffensive-americaine-pour-contrer-le-rgpd
Comprendre RGPD (video un peu malaisante mais bon) : https://youtu.be/OUMGp3HHel4
comprendre et appliquer les nouvelles réglementations dans les établissements scolaires : https://www.reseau-canope.fr/fileadmin/user_upload/Projets/RGPD/RGPD_WEB.pdf</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/rust/rust/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/rust/rust/</guid>
      <description>https://rust-cli.github.io/book/tutorial/index.html Small exercises to get you used to reading and writing Rust code! https://github.com/rust-lang/rustlings/ https://doc.rust-lang.org/stable/rust-by-example/ https://doc.rust-lang.org/book/ https://learnxinyminutes.com/docs/rust/ http://brooker.co.za/blog/2020/03/22/rust.html https://www.youtube.com/watch?v=DnT-LUQgc7s
https://christine.website/blog/how-i-start-rust-2020-03-15 https://github.com/LukeMathWalker/build-your-own-jira-with-rust http://brooker.co.za/blog/2020/03/22/rust.html https://christine.website/blog/why-rust-2020-02-15 https://os.phil-opp.com/async-await/ http://sled.rs/errors
https://medium.com/better-programming/rest-api-in-rust-step-by-step-guide-b8a6c5fcbff0
https://blog.logrocket.com/how-to-build-a-websocket-server-with-rust/
https://www.possiblerust.com/guide/how-to-read-rust-functions-part-1</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/security/cors/cors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/security/cors/cors/</guid>
      <description> CORS # Resources # https://nikofischer.com/cors-does-not-secure-api-endpoints https://news.ycombinator.com/item?id=30320113 https://jakearchibald.com/2021/cors/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/security/messaging/messaging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/security/messaging/messaging/</guid>
      <description> Messaging # Resources # https://snikket.org/blog/products-vs-protocols/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/tests/tdd/tdd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/tests/tdd/tdd/</guid>
      <description> TDD # Resources # https://brntn.me/blog/django-tdd-practice-time-api/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/tests/tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/tests/tests/</guid>
      <description> Tests # Resources # https://martinfowler.com/articles/practical-test-pyramid.html https://www.jamesshore.com/v2/projects/lunch-and-learn https://tyrrrz.me/blog/fakes-over-mocks </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/trunkbased/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/trunkbased/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/vertical_architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/vertical_architecture/</guid>
      <description>https://mehdihadeli.github.io/awesome-software-architecture/architectural-style/vertical-slice-architecture/#articles
https://codeopinion.com/restructuring-to-a-vertical-slice-architecture/
https://headspring.com/2020/08/18/how-vertical-slice-architecture-fulfills-clean-architectures-broken-promises/</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/it/websocket/websocket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/websocket/websocket/</guid>
      <description> Websocket # Resources # https://pages.ably.com/hubfs/the-websocket-handbook.pdf </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/life/happiness/happiness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/life/happiness/happiness/</guid>
      <description> Happiness # Resources # https://supermemo.guru/wiki/Simple_formula_for_happiness </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/life/learning/learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/life/learning/learning/</guid>
      <description> Learning # Resources # https://www.joshwcomeau.com/blog/how-to-learn-stuff-quickly/ https://vasilishynkarenka.com/learning/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/life/life/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/life/life/</guid>
      <description> Life # Resources # https://milan.cvitkovic.net/writing/things_youre_allowed_to_do/ </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/life/money/money/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/life/money/money/</guid>
      <description>Argent # https://www.amundi-ee.com/epargnant/Pages/2021/Comment-faire-des-economies-d-impots-grace-a-votre-PER3?xtor=EPR-189-[video-VV-PER-AESR-seul-oct2021-cible6]---</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/life/parenting/parenting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/life/parenting/parenting/</guid>
      <description> Parenting # Model adulting. Let me figure things out for myself. Tell me about you. Help me with perspective. Keep me safe. Be kind. Show interest in the things I enjoy. Resources # https://grownandflown.com/letter-from-teen-to-parents/ Vous auriez aimé que vos parents lisent ce livre - Philippa PERRY </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/management/leadership/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/management/leadership/</guid>
      <description>Leadership # &amp;ldquo;leadership is holding a vision long enough for someone else to realize it for themselves.&amp;rdquo;
https://news.ycombinator.com/item?id=31814284 You can&amp;rsquo;t &amp;ldquo;fake it&amp;rdquo; at this level. One of the most impressive things IMO about this exec was his ability to know, at a fairly low level, what every department and org in the company was doing, and to diagnose their strengths and weaknesses very quickly. We&amp;rsquo;d have quarterly day-long meetings where every department would present, and his ability to quickly hone in on critical low-level details was extremely impressive.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/management/management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/management/management/</guid>
      <description> Management # Engineering Management # https://www.benkuhn.net/attention/ https://amyunger.com/blog/2020/09/10/staff-engineer-at-heroku.html </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/management/okr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/management/okr/</guid>
      <description>OKR # Les Objectifs sont une description qualitative ambitieuse de ce que l&amp;rsquo;organisation souhaite atteindre.
Les Résultats Clés sont une mesure quantitative des progrès vers cet objectif.
Objectif : où allons-nous, plus précisément, où voulons-nous être dans un certain horizon de temps ? Résultat Clé : comment pensons-nous y parvenir et que signifie atteindre notre objectif ? Les résultats clés basés sur les bénéfices (outcome-based Key Result) sont une mesure du progrès par rapport aux KPIs (exprimé sous la forme : de X à Y) Résultat clé basé sur les projets</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/management/project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/management/project/</guid>
      <description>Project Management # states # use only TODO / DOING / DONE if another one is needed, make sure it is REALLY needed
queue # Every team must have a single ordered queue of tasks
If there is downtime, it’s the top priority of everyone affected If there is an incident, it’s the top priority for an on-call agent My deployed issue waiting for my verification Reviewed pull request waiting for deployment My pull request with completed code review that requested changes Outstanding pull request waiting for code review Customer escalation received through email.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/meeting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/meeting/</guid>
      <description>Meeting # meetings / conferences / presentation
commencer sur papier (pour eviter davoir des slides en tete) poser les questions puis etablir le contenu et la manière de l&amp;rsquo;amener
qu&amp;rsquo;essaye t-on de communiquer/transmettre ? voir ça comme un abstract ou un pitch en 1 minute de la présentation
a qui s&amp;rsquo;adresse la presentation ? qu&amp;rsquo;est ce qui les interessent ? ? quel langage/jargon utilisé ?
ne pas changer le message pour autant mais la façon dont il est transmis</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/philosophy/camus/camus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/philosophy/camus/camus/</guid>
      <description>Albert CAMUS # There are various paradoxical elements in Camus’s approach to philosophy. In his book-length essay, The Myth of Sisyphus, Camus presents a philosophy that contests philosophy itself. This essay belongs squarely in the philosophical tradition of existentialism but Camus denied being an existentialist. Both The Myth of Sisyphus and his other philosophical work, The Rebel, are systematically skeptical of conclusions about the meaning of life, yet both works assert objectively valid answers to key questions about how to live.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/philosophy/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/philosophy/philosophy/</guid>
      <description> Philosophy # Resources # https://www.susanrigetti.com/philosophy </description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/productivity/productivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/productivity/productivity/</guid>
      <description>43 folders : 31 jours + 12 mois
inbox zero : Do Now, Waiting, Later, To Read
GTD</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/questions/questions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/questions/questions/</guid>
      <description>Les questions pour comprendre un sujet:
QUESTIONS DE VÉRITÉ
Comment sait-on que c’est vrai? Qu&amp;rsquo;est-ce qui vous permet de dire ça? Comment le savez vous? Quelles sont vos preuves? QUESTIONS DE CURIOSITÉ
Qu&amp;rsquo;est-ce que c&amp;rsquo;est? Comment ça marche? À quoi ça ressemble? Qu’est-ce qu’il y a à l’intérieur? QUESTIONS DE CAUSALITÉ
D&amp;rsquo;où ça vient? Pourquoi ça se passe comme ça? Qu&amp;rsquo;est-ce qui explique ça? Comment en sommes-nous arrivés là? QUESTIONS D&amp;rsquo;EMPATHIE</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/quotes/quotes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/quotes/quotes/</guid>
      <description>Quotes # &amp;ldquo;When Boris entered the room, Prince Andrey was listening to an old general, wearing his decorations, who was reporting something to Prince Andrey, with an expression of soldierly servility on his purple face. “Alright. Please wait!” he said to the general, speaking in Russian with the French accent which he used when he spoke with contempt. The moment he noticed Boris he stopped listening to the general who trotted imploringly after him and begged to be heard, while Prince Andrey turned to Boris with a cheerful smile and a nod of the head.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/rhetorique/rhetorique/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/rhetorique/rhetorique/</guid>
      <description>rhétorique = art de mettre des mots sur des causes qui nous tiennent à coeur changer le monde par les mots
trouver une cause # intersection entre expertise et passion cause sur laquelle on peut accumuler de l&amp;rsquo;expertise
fédérer autour d&amp;rsquo;une cause # épidictique on ne peut fédérer directement, il faut amener le discours à l&amp;rsquo;épidictique eg. Amerique avant le discours haie d&amp;rsquo;honneur etc figures de styles : parallelisme, repetition pour rompre la routine du langage quotidien signaler au public</description>
    </item>
    
    <item>
      <title></title>
      <link>https://gmolveau.github.io/knowledge/docs/society/disruption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/society/disruption/</guid>
      <description>disruption via une experience plus satisfaisante au client
uber = trouver un taxi vide sans galerer par CB trouver ce qui est penible pour vos clients/utilisateurs
attitude à ne pas adopter : &amp;ldquo;on aura toujours besoin de nous&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Organization</title>
      <link>https://gmolveau.github.io/knowledge/docs/it/organization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/it/organization/</guid>
      <description>Preparing your environment (painless context switch) Work in Small steps Mental warm-up before each session. Anticipate and expect interruptions. Changing your physical location. Writting down the ideas on your mind at the end of the session. from : https://hugozap.com/posts/how-to-finish-your-side-project/</description>
    </item>
    
    <item>
      <title>Recettes</title>
      <link>https://gmolveau.github.io/knowledge/docs/cuisine/recettes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gmolveau.github.io/knowledge/docs/cuisine/recettes/</guid>
      <description>risoto de pâtes chorizo ingrédients : 2 chorizos entiers 2 oignons creme fraiche 25cL bouillon volaille mascarpone petits pois pates parmesan
enlever peau chorizo couper en dés revenir à feu moyen (pas que ça crame) enlever chorizo ajouter un peu de gras faire revenir deux oignons ajouter une brick de crème fraîche 25 cl + bouillon de volaille dans un verre d’eau laisser mijoter et reduire (genre 10-15 min) remettre les chorizos ajouter mascarpone et petits pois mélanger jusqua ce que la mascarpone fonde a coté faire cuire les pates</description>
    </item>
    
  </channel>
</rss>
